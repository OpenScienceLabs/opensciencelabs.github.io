<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Open Science Labs</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/</link><description>Recent content in Blog on Open Science Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 25 Sep 2022 00:08:03 -0400</lastBuildDate><atom:link href="https://opensciencelabs.org/opensciencelabs2.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Crea tu nube de palabras en R a partir de un documento de texto</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/nube-de-palabras/</link><pubDate>Sun, 25 Sep 2022 00:08:03 -0400</pubDate><guid>https://opensciencelabs.org/opensciencelabs2.github.io/blog/nube-de-palabras/</guid><description>
Una nube de palabras o wordcloud nos sirve para visualizar la frecuencia de palabras dentro de un texto. En este tutorial, usaremos el artículo de inteligencia artificial de Wikipedia para construir nuestra nube de palabras usando las bibliotecas tm y wordcloud.
Instalación de pre-requisitos Para un mejor manejo de los paquetes, aquí vamos a utilizar la biblioteca pacman, esta nos permitirá hacer una instalación y activación de las bibliotecas de manera rápida.</description></item><item><title>Reorganiza tu tabla con tidyr en R</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/reorganiza-tus-tablas-con-tidyr/</link><pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate><guid>https://opensciencelabs.org/opensciencelabs2.github.io/blog/reorganiza-tus-tablas-con-tidyr/</guid><description>
En este artículo, modificaremos la forma de nuestra tabla, combinando varias columnas en una sola o viceversa, usando la biblioteca tidyr con sus funciones gather(), spread(), separate(), y unite() con ejemplos.
Requisitos Por comodidad usamos la biblioteca pacman como gestor de paquetes.
1 2# install.packages(&amp;#34;pacman&amp;#34;) Para instalar la biblioteca pacman 3library(pacman) # Gestor de paquetes en R 4p_load(&amp;#34;readr&amp;#34;) # Biblioteca para importar archivos csv 5p_load(&amp;#34;tidyr&amp;#34;) # Biblioteca para manipular datos 6p_load(&amp;#34;ggplot2&amp;#34;) # Biblioteca para graficar datos 7p_load(&amp;#34;dplyr&amp;#34;) # Biblioteca para filtrar datos de la tabla 8p_load(&amp;#34;zoo&amp;#34;) # Biblioteca para transformar fechas a trimestres 9p_load(&amp;#34;scales&amp;#34;) # Biblioteca para dar formato de miles en el eje &amp;#34;y&amp;#34; Recuerde, también puede instalar y abrir las bibliotecas de manera tradicional, por ejemplo con: install.</description></item><item><title>Cómo filtrar datos de tu tabla con dplyr en R</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/art-filtrar-datos/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><guid>https://opensciencelabs.org/opensciencelabs2.github.io/blog/art-filtrar-datos/</guid><description>
En este artículo mostraremos como usar algunas funciones importantes de la biblioteca de dplyr, específicamente veremos como usar las funciones filter(), select(), group_by(), sumarize() y mutate() dentro de un ejemplo práctico.
Requisitos Por comodidad usamos la biblioteca pacman como gestor de paquetes.
1# install.packages(&amp;#34;pacman&amp;#34;) Para instalar la biblioteca pacman 2library(pacman) # Gestor de paquetes en R 3p_load(&amp;#34;readr&amp;#34;) # Biblioteca para importar archivos csv 4p_load(&amp;#34;dplyr&amp;#34;) # Biblioteca para manipular datos 5p_load(&amp;#34;ggplot2&amp;#34;) # Biblioteca para graficar datos Recuerde, que tambien puede instalar y abrir las bibliotecas de manera tradicional, por ejemplo con: install.</description></item><item><title>Dibuja tus mapas en R usando archivos de formato Shapefile</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/dibuja-tus-mapas-en-r-usando-archivos-de-formato-shapefile/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>https://opensciencelabs.org/opensciencelabs2.github.io/blog/dibuja-tus-mapas-en-r-usando-archivos-de-formato-shapefile/</guid><description>
Este breve tutorial te mostrará como graficar mapas en R, extaer datos de archivos de formato shapefile, resaltar puntos en tu mapa y modificar su apariencia utilizando las bibliotecas rgdal y ggplot2.
Comenzando Para que todas las bibliotecas funcionen correctamente, se recomienda instalar o actualizar a las últimas versiones de R y de su IDE RStudio con su correspondiente complemento RTools.
En este artículo, vamos a utilizar archivos de formato Shapefile.</description></item><item><title>Visualiza tus datos en R con ggplot2 y gganimate</title><link>https://opensciencelabs.org/opensciencelabs2.github.io/blog/visualiza-tus-datos-en-r-con-ggplot-y-gganimate/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>https://opensciencelabs.org/opensciencelabs2.github.io/blog/visualiza-tus-datos-en-r-con-ggplot-y-gganimate/</guid><description>
Una gráfica es una buena manera de expresar los datos, estos ayudan a ver detalles que simplemente pueden pasar desapercibidos cuando sólo se los analizan numericamente, estos pueden tener aún mayor impacto si estan animados. ¿Por qué no hacerlo?. En este artículo se describe como hacer animación usando ggplot2 y gganimate en R.
Comenzando Usamos R por ser un lenguaje especializado para ciencia de datos y tener una gran Comunidad Open Source.</description></item></channel></rss>